package android.smartcampus.template.standalone;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.DaoConfig;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.IdentityScopeType;

import android.smartcampus.template.standalone.Utente;
import android.smartcampus.template.standalone.Evento;
import android.smartcampus.template.standalone.Meeting;
import android.smartcampus.template.standalone.POI;
import android.smartcampus.template.standalone.Ticket;
import android.smartcampus.template.standalone.Atleta;

import android.smartcampus.template.standalone.UtenteDao;
import android.smartcampus.template.standalone.EventoDao;
import android.smartcampus.template.standalone.MeetingDao;
import android.smartcampus.template.standalone.POIDao;
import android.smartcampus.template.standalone.TicketDao;
import android.smartcampus.template.standalone.AtletaDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig utenteDaoConfig;
    private final DaoConfig eventoDaoConfig;
    private final DaoConfig meetingDaoConfig;
    private final DaoConfig pOIDaoConfig;
    private final DaoConfig ticketDaoConfig;
    private final DaoConfig atletaDaoConfig;

    private final UtenteDao utenteDao;
    private final EventoDao eventoDao;
    private final MeetingDao meetingDao;
    private final POIDao pOIDao;
    private final TicketDao ticketDao;
    private final AtletaDao atletaDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        utenteDaoConfig = daoConfigMap.get(UtenteDao.class).clone();
        utenteDaoConfig.initIdentityScope(type);

        eventoDaoConfig = daoConfigMap.get(EventoDao.class).clone();
        eventoDaoConfig.initIdentityScope(type);

        meetingDaoConfig = daoConfigMap.get(MeetingDao.class).clone();
        meetingDaoConfig.initIdentityScope(type);

        pOIDaoConfig = daoConfigMap.get(POIDao.class).clone();
        pOIDaoConfig.initIdentityScope(type);

        ticketDaoConfig = daoConfigMap.get(TicketDao.class).clone();
        ticketDaoConfig.initIdentityScope(type);

        atletaDaoConfig = daoConfigMap.get(AtletaDao.class).clone();
        atletaDaoConfig.initIdentityScope(type);

        utenteDao = new UtenteDao(utenteDaoConfig, this);
        eventoDao = new EventoDao(eventoDaoConfig, this);
        meetingDao = new MeetingDao(meetingDaoConfig, this);
        pOIDao = new POIDao(pOIDaoConfig, this);
        ticketDao = new TicketDao(ticketDaoConfig, this);
        atletaDao = new AtletaDao(atletaDaoConfig, this);

        registerDao(Utente.class, utenteDao);
        registerDao(Evento.class, eventoDao);
        registerDao(Meeting.class, meetingDao);
        registerDao(POI.class, pOIDao);
        registerDao(Ticket.class, ticketDao);
        registerDao(Atleta.class, atletaDao);
    }
    
    public void clear() {
        utenteDaoConfig.getIdentityScope().clear();
        eventoDaoConfig.getIdentityScope().clear();
        meetingDaoConfig.getIdentityScope().clear();
        pOIDaoConfig.getIdentityScope().clear();
        ticketDaoConfig.getIdentityScope().clear();
        atletaDaoConfig.getIdentityScope().clear();
    }

    public UtenteDao getUtenteDao() {
        return utenteDao;
    }

    public EventoDao getEventoDao() {
        return eventoDao;
    }

    public MeetingDao getMeetingDao() {
        return meetingDao;
    }

    public POIDao getPOIDao() {
        return pOIDao;
    }

    public TicketDao getTicketDao() {
        return ticketDao;
    }

    public AtletaDao getAtletaDao() {
        return atletaDao;
    }

}
