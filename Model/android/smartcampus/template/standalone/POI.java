package android.smartcampus.template.standalone;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.Serializable;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

import org.json.JSONException;
import org.json.JSONObject;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table POI.
 */
public class POI implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long id;
	private String nome;
	private String categoria;
	private String descrizione;
	private Double latGPS;
	private Double lngGPS;

	private String indirizzo = null;

	public POI() {
	}

	public POI(Long id) {
		this.id = id;
	}

	public POI(Long id, String nome, String categoria, String descrizione,
			Double latGPS, Double lngGPS) {
		this.id = id;
		this.nome = nome;
		this.categoria = categoria;
		this.latGPS = latGPS;
		this.lngGPS = lngGPS;
		this.descrizione = descrizione;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public String getCategoria() {
		return categoria;
	}

	public void setCategoria(String categoria) {
		this.categoria = categoria;
	}

	public Double getLatGPS() {
		return latGPS;
	}

	public void setLatGPS(Double latGPS) {
		this.latGPS = latGPS;
	}

	public Double getLngGPS() {
		return lngGPS;
	}

	public void setLngGPS(Double lngGPS) {
		this.lngGPS = lngGPS;
	}

	public String getDescrizione() {
		return descrizione;
	}

	public void setDescrizione(String descrizione) {
		this.descrizione = descrizione;
	}

	public String getIndirizzo() {
		return (indirizzo == null) ? reverseGeoCoding() : indirizzo;
	}

	private String reverseGeoCoding() {
		try {

			URL url = new URL(
					"http://maps.googleapis.com/maps/api/geocode/json?latlng="
							+ getLatGPS() + "," + getLngGPS() + "&sensor=true");
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setRequestMethod("GET");
			conn.setRequestProperty("Accept", "application/json");

			if (conn.getResponseCode() != 200) {
				throw new RuntimeException("Failed : HTTP error code : "
						+ conn.getResponseCode());
			}

			BufferedReader br = new BufferedReader(new InputStreamReader(
					(conn.getInputStream())));

			String line = "";
			String output = "";
			while ((line = br.readLine()) != null) {
				output = output + line;
			}

			conn.disconnect();

			indirizzo = new JSONObject(output).getJSONArray("results")
					.getJSONObject(0).getString("formatted_address");
			return indirizzo;

		} catch (MalformedURLException e) {

			e.printStackTrace();

		} catch (IOException e) {

			e.printStackTrace();

		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return null;
	}
}
